stages:
  - build
  - test
  - sonartest
  - docker

# Define the Docker image to be used for the job
image: python:3.8

# Cache dependencies to speed up builds
cache:
  paths:
    - .venv/

# Build stage for Flask WebApp
build:
  stage: build
  script:
    - python -m venv .venv
    - source .venv/bin/activate
    - pip install -r web/requirements.txt
  artifacts:
    paths:
      - .venv/

#Test Stage using PyTest
test:
  stage: test
  dependencies:
    - build
  script:
    - source .venv/bin/activate
    - pytest

#SonarCloud Checks
sonartest:
  stage: sonartest
  dependencies:
    - build
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner

# Docker build and push stage
docker_build:
  stage: docker
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    - docker compose build --no-cache
    - docker tag prashun08/web prashun08/web:"$CI_PIPELINE_IID"
    - docker tag prashun08/db prashun08/db:"$CI_PIPELINE_IID"
    - docker push prashun08/web:"$CI_PIPELINE_IID"
    - docker push prashun08/db:"$CI_PIPELINE_IID"


